/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getStructDecoder,
  getStructEncoder,
  getU8Decoder,
  getU8Encoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from 'gill';

export type FortuneConfig = {
  greatLuckProb: number;
  goodLuckProb: number;
  neutralProb: number;
  badLuckProb: number;
  greatBadLuckProb: number;
};

export type FortuneConfigArgs = FortuneConfig;

export function getFortuneConfigEncoder(): FixedSizeEncoder<FortuneConfigArgs> {
  return getStructEncoder([
    ['greatLuckProb', getU8Encoder()],
    ['goodLuckProb', getU8Encoder()],
    ['neutralProb', getU8Encoder()],
    ['badLuckProb', getU8Encoder()],
    ['greatBadLuckProb', getU8Encoder()],
  ]);
}

export function getFortuneConfigDecoder(): FixedSizeDecoder<FortuneConfig> {
  return getStructDecoder([
    ['greatLuckProb', getU8Decoder()],
    ['goodLuckProb', getU8Decoder()],
    ['neutralProb', getU8Decoder()],
    ['badLuckProb', getU8Decoder()],
    ['greatBadLuckProb', getU8Decoder()],
  ]);
}

export function getFortuneConfigCodec(): FixedSizeCodec<
  FortuneConfigArgs,
  FortuneConfig
> {
  return combineCodec(getFortuneConfigEncoder(), getFortuneConfigDecoder());
}
