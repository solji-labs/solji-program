/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getArrayDecoder,
  getArrayEncoder,
  getStructDecoder,
  getStructEncoder,
  type Codec,
  type Decoder,
  type Encoder,
} from 'gill';
import {
  getDonationLevelConfigDecoder,
  getDonationLevelConfigEncoder,
  getFortuneConfigDecoder,
  getFortuneConfigEncoder,
  getIncenseTypeDecoder,
  getIncenseTypeEncoder,
  type DonationLevelConfig,
  type DonationLevelConfigArgs,
  type FortuneConfig,
  type FortuneConfigArgs,
  type IncenseType,
  type IncenseTypeArgs,
} from '.';

export type DynamicConfig = {
  incenseTypes: Array<IncenseType>;
  regularFortune: FortuneConfig;
  buddhaFortune: FortuneConfig;
  donationLevels: Array<DonationLevelConfig>;
};

export type DynamicConfigArgs = {
  incenseTypes: Array<IncenseTypeArgs>;
  regularFortune: FortuneConfigArgs;
  buddhaFortune: FortuneConfigArgs;
  donationLevels: Array<DonationLevelConfigArgs>;
};

export function getDynamicConfigEncoder(): Encoder<DynamicConfigArgs> {
  return getStructEncoder([
    ['incenseTypes', getArrayEncoder(getIncenseTypeEncoder())],
    ['regularFortune', getFortuneConfigEncoder()],
    ['buddhaFortune', getFortuneConfigEncoder()],
    ['donationLevels', getArrayEncoder(getDonationLevelConfigEncoder())],
  ]);
}

export function getDynamicConfigDecoder(): Decoder<DynamicConfig> {
  return getStructDecoder([
    ['incenseTypes', getArrayDecoder(getIncenseTypeDecoder())],
    ['regularFortune', getFortuneConfigDecoder()],
    ['buddhaFortune', getFortuneConfigDecoder()],
    ['donationLevels', getArrayDecoder(getDonationLevelConfigDecoder())],
  ]);
}

export function getDynamicConfigCodec(): Codec<
  DynamicConfigArgs,
  DynamicConfig
> {
  return combineCodec(getDynamicConfigEncoder(), getDynamicConfigDecoder());
}
