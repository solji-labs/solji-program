/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  addDecoderSizePrefix,
  addEncoderSizePrefix,
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getStructDecoder,
  getStructEncoder,
  getU32Decoder,
  getU32Encoder,
  getU64Decoder,
  getU64Encoder,
  getU8Decoder,
  getU8Encoder,
  getUtf8Decoder,
  getUtf8Encoder,
  type Codec,
  type Decoder,
  type Encoder,
} from 'gill';

export type IncenseType = {
  id: number;
  name: string;
  priceLamports: bigint;
  merit: bigint;
  incensePoints: bigint;
  isDonation: boolean;
};

export type IncenseTypeArgs = {
  id: number;
  name: string;
  priceLamports: number | bigint;
  merit: number | bigint;
  incensePoints: number | bigint;
  isDonation: boolean;
};

export function getIncenseTypeEncoder(): Encoder<IncenseTypeArgs> {
  return getStructEncoder([
    ['id', getU8Encoder()],
    ['name', addEncoderSizePrefix(getUtf8Encoder(), getU32Encoder())],
    ['priceLamports', getU64Encoder()],
    ['merit', getU64Encoder()],
    ['incensePoints', getU64Encoder()],
    ['isDonation', getBooleanEncoder()],
  ]);
}

export function getIncenseTypeDecoder(): Decoder<IncenseType> {
  return getStructDecoder([
    ['id', getU8Decoder()],
    ['name', addDecoderSizePrefix(getUtf8Decoder(), getU32Decoder())],
    ['priceLamports', getU64Decoder()],
    ['merit', getU64Decoder()],
    ['incensePoints', getU64Decoder()],
    ['isDonation', getBooleanDecoder()],
  ]);
}

export function getIncenseTypeCodec(): Codec<IncenseTypeArgs, IncenseType> {
  return combineCodec(getIncenseTypeEncoder(), getIncenseTypeDecoder());
}
