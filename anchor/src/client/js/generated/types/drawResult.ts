/**
 * This code was AUTOGENERATED using the codama library.
 * Please DO NOT EDIT THIS FILE, instead use visitors
 * to add features, then rerun codama to update it.
 *
 * @see https://github.com/codama-idl/codama
 */

import {
  combineCodec,
  getBooleanDecoder,
  getBooleanEncoder,
  getI64Decoder,
  getI64Encoder,
  getStructDecoder,
  getStructEncoder,
  type FixedSizeCodec,
  type FixedSizeDecoder,
  type FixedSizeEncoder,
} from 'gill';
import {
  getFortuneResultDecoder,
  getFortuneResultEncoder,
  type FortuneResult,
  type FortuneResultArgs,
} from '.';

export type DrawResult = {
  fortune: FortuneResult;
  timestamp: bigint;
  usedMerit: boolean;
};

export type DrawResultArgs = {
  fortune: FortuneResultArgs;
  timestamp: number | bigint;
  usedMerit: boolean;
};

export function getDrawResultEncoder(): FixedSizeEncoder<DrawResultArgs> {
  return getStructEncoder([
    ['fortune', getFortuneResultEncoder()],
    ['timestamp', getI64Encoder()],
    ['usedMerit', getBooleanEncoder()],
  ]);
}

export function getDrawResultDecoder(): FixedSizeDecoder<DrawResult> {
  return getStructDecoder([
    ['fortune', getFortuneResultDecoder()],
    ['timestamp', getI64Decoder()],
    ['usedMerit', getBooleanDecoder()],
  ]);
}

export function getDrawResultCodec(): FixedSizeCodec<
  DrawResultArgs,
  DrawResult
> {
  return combineCodec(getDrawResultEncoder(), getDrawResultDecoder());
}
